x-common_env: &common_env
    env_file:
        - .env

x-dev_network: &dev_network
    name: insight_erp_dev_network

x-prod_network: &prod_network
    name: insight_erp_prod_network

services:
    # Development environment services
    app_dev:
        profiles: ["dev"]
        container_name: insight_erp_dev
        build:
            context: .
            dockerfile: Dockerfile
            args:
                NODE_ENV: development
        volumes:
            - ./src:/app/src
        <<: *common_env
        command: >
            sh -c "
              bunx prisma migrate dev &&
              bunx prisma generate &&
              bun run seed &&
              bun run dev
            "
        depends_on:
            postgres_dev:
                condition: service_healthy
            redis_dev:
                condition: service_started
        networks:
            - insight_erp_dev_network
        ports:
            - "${PORT}:${PORT}"

    postgres_dev:
        profiles: ["dev"]
        container_name: postgres_dev
        image: postgres:13-alpine
        <<: *common_env
        volumes:
            - postgres_dev_data:/var/lib/postgresql/data
        networks:
            - insight_erp_dev_network
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5

    redis_dev:
        profiles: ["dev"]
        container_name: redis_dev
        image: redis:6-alpine
        networks:
            - insight_erp_dev_network
        ports:
            - "6379:6379"

    # Production environment services
    app_prod:
        profiles: ["prod"]
        container_name: insight_erp_prod
        build:
            context: .
            dockerfile: Dockerfile
            args:
                NODE_ENV: production
        env_file:
            - /home/ubuntu/.env # Production env file path
        command: sh -c "bunx prisma migrate deploy && bun run start"
        depends_on:
            - postgres_prod
            - redis_prod
        networks:
            - insight_erp_prod_network
        ports:
            - "3000:3000"

    postgres_prod:
        profiles: ["prod"]
        container_name: postgres_prod
        image: postgres:13-alpine
        env_file:
            - /home/ubuntu/.env
        volumes:
            - postgres_prod_data:/var/lib/postgresql/data
        networks:
            - insight_erp_prod_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5

    redis_prod:
        profiles: ["prod"]
        container_name: redis_prod
        image: redis:6-alpine
        env_file:
            - /home/ubuntu/.env
        networks:
            - insight_erp_prod_network

networks:
    insight_erp_dev_network: *dev_network
    insight_erp_prod_network: *prod_network

volumes:
    postgres_dev_data:
    postgres_prod_data:
