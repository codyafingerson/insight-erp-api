name: CI/CD Pipeline - Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis_ci:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://testuser:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/testdb
      REDIS_URL: redis://redis_ci:6379
      NODE_ENV: test
      SESSION_SECRET: testsecret
      REDIS_HOST: redis_ci
      REDIS_PORT: "6379"
      ROOT_NAME: "Test Root"
      ROOT_USERNAME: testroot
      ROOT_EMAIL: root@test.com
      ROOT_PASSWORD: rootpass
      MAIL_HOST: smtp.test.com
      MAIL_PORT: "465"
      MAIL_USER: testmailuser
      MAIL_PASSWORD: testmailpassword
      CORS_ALLOWED_ORIGINS: http://localhost:3000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Wait for DB stabilization
        run: sleep 5

      - name: Run Prisma migrations
        run: bunx prisma migrate deploy

      - name: Run tests
        run: bun test

      - name: Trigger Render Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}